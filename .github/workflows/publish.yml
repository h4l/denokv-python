name: publish
on:
  push:
    tags:
      - v**
  workflow_run:
    workflows: ["Main"]
    types:
      - completed
jobs:
  # Only runs on default branch. This job dynamically sets the pyproject.toml
  # version to a devN version, like 0.1.0-dev123 so that we can publish an
  # unstable dev release to pypi. To be eligable for a dev release, the version
  # must have a bare dev pre-release marker, like 0.1.0-dev. (It can have
  # multiple, like 0.1.0-alpha1-dev.).
  # It's not run for tagged releases â€” they use the version as-is.
  prepare-dev-release:
    if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
    name: "Prepare main branch dev release version"
    runs-on: ubuntu-latest
    outputs:
      dev_version: ${{ steps.dev_version.outputs.dev_version }}

    steps:
      - uses: actions/checkout@v4

      # We need all commits on the default branch to count them (we don't change
      # actions/checkout depth as that fetches all branches).
      - name: Fetch all commits on default branch
        run: git fetch --unshallow

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install tools
        run: pip install poetry

      - name: Set dev release version
        id: dev_version
        run: |
          if python scripts/set_dev_version.py; then
            dev_version=$(poetry version --short) || exit 1
            echo "dev_version=${dev_version:?}" >> $GITHUB_OUTPUT
          fi

  pypi-publish:
    name: Upload to PyPI
    needs: ["prepare-dev-release"]
    # This can run when prepare-dev-release doesn't for tagged releases. For
    # default branch, this only runs when the commit is eligible for a dev
    # release, as described above prepare-dev-release.
    if: ${{ needs.prepare-dev-release.outputs.dev_version != '' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) }}
    environment: test-release
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install tools
        run: pip install poetry

      - name: Set dev release version
        if: needs.prepare-dev-release.outputs.dev_version != ''
        env:
          DEV_VERSION: ${{ needs.prepare-dev-release.outputs.dev_version }}
        run: poetry version "${DEV_VERSION:?}"

      - name: Build the release packages
        run: |
          poetry build
          sha256sum dist/*

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          repository-url: https://test.pypi.org/legacy/
          verbose: true
